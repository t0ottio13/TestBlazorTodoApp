@page "/bord"
@using TodoList.Shared
@inject HttpClient Http


<h1>掲示板</h1>

<ul style="list-style: none;">
    <li>
        <input placeholder="Name" @bind="newPostName" />
    </li>
    <li>
        <textarea placeholder="Text..." @bind="newPostDescription" />  
    </li>
    <li>
        <button @onclick="AddPost">投稿する</button>
    </li>
</ul>



<ul>
    @foreach(var post in posts)
    {
        <li>
            <p>@post.Name さん</p>
            <p>@post.Description</p>
            <p>@post.CreatedAt</p>
        </li>
    }
</ul>

<p>This component demonstrates fetching data from the server.</p>

@if (functionsPosts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <tbody>
            @foreach (var  functionsPost in functionsPosts)
            {
                <tr>
                    <td>@functionsPost.ResponseMessage.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Post> posts = new();

    private string? newPostName;

    private string? newPostDescription;

    private DateTime newPostCreatedAt;


    private void AddPost()
    {
        newPostCreatedAt = DateTime.Now;

        if (!string.IsNullOrWhiteSpace(newPostName) && !string.IsNullOrWhiteSpace(newPostName)&& !string.IsNullOrWhiteSpace(newPostDescription))
        {
            posts.Insert(0,new Post { 
                Name = newPostName,
                Description = newPostDescription,
                CreatedAt = newPostCreatedAt
            });

            newPostName = string.Empty;
            newPostDescription = string.Empty;
        }
    }


    private FunctionsPosts[] functionsPosts = new FunctionsPosts[]{};

    protected override async Task OnInitializedAsync()
    {
        try
        {
            functionsPosts = await Http.GetFromJsonAsync<FunctionsPosts[]>("/api/Function1")?? new FunctionsPosts[]{};
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.ToString);
        }

    }
}
